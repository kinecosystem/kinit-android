apply plugin: 'com.android.application'

apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'

def propertiesFile = rootProject.file("app/kinit.properties")
// Initialize a new Properties() object called keystoreProperties.
def globalProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
globalProperties.load(new FileInputStream(propertiesFile))
def captchaSecret = globalProperties.getProperty("CaptchaApiSecret")
if (captchaSecret == null) {
    captchaSecret = '"secret"'
}

allOpen {
    annotation("org.kinecosystem.kinit.annotations.OpenClass")
}

android {
    signingConfigs {
        prodBeta {
            keyAlias globalProperties['keyAlias']
            keyPassword globalProperties['keyPassword']
            storeFile file("kinit.jks")
            storePassword globalProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "org.kinecosystem.kinit"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 33
        versionName "2.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        dataBinding {
            enabled = true
        }
        buildConfigField "String", "StageBaseUrl", globalProperties["StageBaseUrl"]
        buildConfigField "String", "ProdBaseUrl", globalProperties["ProdBaseUrl"]
        buildConfigField "String", "truexHashStage", globalProperties["truexHashStage"]
        buildConfigField "String", "truexHashProd", globalProperties["truexHashProd"]
        buildConfigField "String", "TestFairyApiSecret", globalProperties["TestfairyApiSecret"]
        buildConfigField "String", "CaptchaApiSecret", captchaSecret
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            useProguard true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "AnalyticsApiSecret", globalProperties["ProdAnalyticsApiSecret"]
            signingConfig signingConfigs.prodBeta
        }
        debug {
            buildConfigField "String", "AnalyticsApiSecret", globalProperties["StageAnalyticsApiSecret"]
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}


androidExtensions {
    experimental = true
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation "com.google.truth:truth:0.42"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    kapt "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    kapt 'com.android.databinding:compiler:3.0.1'
    implementation 'com.android.support:support-compat:27.1.1'
    implementation 'com.github.kinfoundation.kin-ecosystem-android-sdk:transfer:0.8.0'
    implementation 'com.github.kinecosystem:kin-sdk-android:1.0.2'
    implementation 'com.google.firebase:firebase-messaging:15.0.2'
    implementation 'com.airbnb.android:lottie:2.5.0'
    implementation 'androidx.core:core-ktx:0.3'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'com.amplitude:android-sdk:2.14.1'
    implementation 'nl.dionsegijn:konfetti:1.1.2'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.google.android.gms:play-services-vision:17.0.2'
    implementation 'com.google.android.gms:play-services-safetynet:16.0.0'
    implementation 'com.android.support:gridlayout-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
        transitive = true
    }
    implementation 'testfairy:testfairy-android-sdk:1.7.1@aar'
    androidTestImplementation 'com.nhaarman:mockito-kotlin:1.5.0'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.15'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.6.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    androidTestImplementation "org.mockito:mockito-android:2.15.0"
    implementation 'com.google.firebase:firebase-auth:15.1.0'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    kapt 'com.google.dagger:dagger-android-processor:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    implementation 'com.google.dagger:dagger:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    kaptTest 'com.google.dagger:dagger-compiler:2.15'
    compile project(path: ':kinit-client-validation-android-module')
    implementation 'com.github.kinecosystem:kin-migration-module-android:1.0.5'
    api 'com.github.kinecosystem:kin-utils-android:1.1'
}

apply plugin: 'com.google.gms.google-services'
